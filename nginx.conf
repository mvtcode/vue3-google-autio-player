user  nginx;
worker_processes  1;

error_log  /var/log/nginx/error.log debug;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    keepalive_timeout  65;
    resolver 8.8.8.8 ipv6=off;
    client_max_body_size 100M;

    map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
    }

    server {
        listen       80;
        server_name  localhost;

        # Serve static files
        location / {
            root   /usr/share/nginx/html;
            index  index.html;
            try_files $uri $uri/ /index.html;
        }

        # Proxy for Google Drive files
        location /audio/ {
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*' always;
                add_header 'Access-Control-Allow-Methods' 'GET, OPTIONS' always;
                add_header 'Access-Control-Allow-Headers' '*' always;
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain charset=UTF-8';
                add_header 'Content-Length' 0;
                return 204;
            }

            # Extract file ID
            if ($request_uri ~ "/audio/(.+)$") {
                set $file_id $1;
            }

            # Proxy to Google Drive
            proxy_pass https://drive.google.com/uc?export=download&id=$file_id&confirm=t;
            
            # Important headers
            proxy_set_header Host drive.google.com;
            proxy_set_header Referer "https://drive.google.com";
            proxy_set_header User-Agent "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36";
            proxy_set_header Accept "*/*";
            proxy_set_header Accept-Encoding "gzip, deflate, br";
            proxy_set_header Connection "keep-alive";
            proxy_set_header Upgrade-Insecure-Requests "1";
            
            # CORS headers
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' '*' always;
            add_header 'Access-Control-Expose-Headers' '*' always;

            # Proxy settings
            proxy_ssl_server_name on;
            proxy_ssl_protocols TLSv1.2 TLSv1.3;
            proxy_http_version 1.1;
            proxy_buffering off;
            proxy_cache off;
            proxy_redirect off;
            
            # Handle range requests for audio streaming
            proxy_set_header Range $http_range;
            proxy_set_header If-Range $http_if_range;
            
            # Timeout settings
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;

            # Error handling
            proxy_intercept_errors on;
            error_page 301 302 307 = @handle_redirect;
        }

        # Handle redirects from Google Drive
        location @handle_redirect {
            set $saved_redirect_location '$upstream_http_location';

            # Important headers for redirect
            proxy_set_header Host $proxy_host;
            proxy_set_header Referer "https://drive.google.com";
            proxy_set_header User-Agent "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36";
            proxy_set_header Accept "*/*";
            proxy_set_header Accept-Encoding "gzip, deflate, br";
            proxy_set_header Connection "keep-alive";
            
            proxy_pass $saved_redirect_location;
            proxy_ssl_server_name on;
            proxy_ssl_protocols TLSv1.2 TLSv1.3;
            
            # CORS headers for redirect
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' '*' always;
            add_header 'Access-Control-Expose-Headers' '*' always;
        }

        # Error pages
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/share/nginx/html;
        }
    }
} 